"""File Generated by Sideko (sideko.dev)"""

import io
import typing


import pydantic

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class GetAccountAllResponseBanksItemRail(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    currency: typing.Optional[str] = pydantic.Field(alias="currency", default=None)
    payment_rail: typing.Optional[str] = pydantic.Field(
        alias="paymentRail", default=None
    )
    rail_type: typing.Optional[str] = pydantic.Field(alias="railType", default=None)


class GetAccountAllResponseBanksItem(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    account_holder_city: typing.Optional[str] = pydantic.Field(
        alias="accountHolderCity", default=None
    )
    account_holder_country: typing.Optional[str] = pydantic.Field(
        alias="accountHolderCountry", default=None
    )
    account_holder_name: typing.Optional[str] = pydantic.Field(
        alias="accountHolderName", default=None
    )
    account_holder_postal_code: typing.Optional[str] = pydantic.Field(
        alias="accountHolderPostalCode", default=None
    )
    account_holder_state_province_region: typing.Optional[str] = pydantic.Field(
        alias="accountHolderStateProvinceRegion", default=None
    )
    account_holder_street_line1: typing.Optional[str] = pydantic.Field(
        alias="accountHolderStreetLine1", default=None
    )
    account_id: typing.Optional[str] = pydantic.Field(alias="accountId", default=None)
    account_number: typing.Optional[str] = pydantic.Field(
        alias="accountNumber", default=None
    )
    account_type: typing.Optional[str] = pydantic.Field(
        alias="accountType", default=None
    )
    bank_country: typing.Optional[str] = pydantic.Field(
        alias="bankCountry", default=None
    )
    business_identifier_code: typing.Optional[str] = pydantic.Field(
        alias="businessIdentifierCode", default=None
    )
    created_at: typing.Optional[str] = pydantic.Field(alias="createdAt", default=None)
    rail: typing.Optional[GetAccountAllResponseBanksItemRail] = pydantic.Field(
        alias="rail", default=None
    )
    routing_number: typing.Optional[str] = pydantic.Field(
        alias="routingNumber", default=None
    )
    status: typing.Optional[str] = pydantic.Field(alias="status", default=None)
    user_id: typing.Optional[str] = pydantic.Field(alias="userId", default=None)


class GetAccountAllResponse(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    banks: typing.Optional[typing.List[GetAccountAllResponseBanksItem]] = (
        pydantic.Field(alias="banks", default=None)
    )
    count: typing.Optional[int] = pydantic.Field(alias="count", default=None)

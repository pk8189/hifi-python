"""File Generated by Sideko (sideko.dev)"""

from v1_production.core import (
    default_request_options,
    QueryParams,
    AsyncBaseClient,
    SyncBaseClient,
    encode_param,
    RequestOptions,
    to_encodable,
)
from v1_production.types.account.usd.offramp.wire import models, params
import typing


class WireClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)

    # register sync api methods (keep comment for code generation)
    def create(
        self,
        *,
        data: typing.Optional[params.PostAccountUsdOfframpWireBody] = None,
        user_id: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.PostAccountUsdOfframpWireResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if user_id is not None:
            _query["userId"] = encode_param(user_id, False)
        _json = to_encodable(
            item=data, dump_with=params._SerializerPostAccountUsdOfframpWireBody
        )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="POST",
            path="/account/usd/offramp/wire",
            auth_names=["sec0"],
            query_params=_query,
            json=_json,
            cast_to=models.PostAccountUsdOfframpWireResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncWireClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)

    # register async api methods (keep comment for code generation)
    async def create(
        self,
        *,
        data: typing.Optional[params.PostAccountUsdOfframpWireBody] = None,
        user_id: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.PostAccountUsdOfframpWireResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if user_id is not None:
            _query["userId"] = encode_param(user_id, False)
        _json = to_encodable(
            item=data, dump_with=params._SerializerPostAccountUsdOfframpWireBody
        )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="POST",
            path="/account/usd/offramp/wire",
            auth_names=["sec0"],
            query_params=_query,
            json=_json,
            cast_to=models.PostAccountUsdOfframpWireResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)

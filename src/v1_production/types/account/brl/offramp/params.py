"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PostAccountBrlOfframpBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    bank_country: typing_extensions.Required[str]
    currency: typing_extensions.Required[typing_extensions.Literal["BRL"]]
    name: typing_extensions.Required[str]
    pix_key: typing_extensions.Required[str]
    receiver_id: typing_extensions.Required[str]
    user_id: typing_extensions.Required[str]


class _SerializerPostAccountBrlOfframpBody(pydantic.BaseModel):
    """
    Serializer for PostAccountBrlOfframpBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    bank_country: str = pydantic.Field(alias="bankCountry")
    currency: typing_extensions.Literal["BRL"] = pydantic.Field(alias="currency")
    name: str = pydantic.Field(alias="name")
    pix_key: str = pydantic.Field(alias="pixKey")
    receiver_id: str = pydantic.Field(alias="receiverId")
    user_id: str = pydantic.Field(alias="userId")

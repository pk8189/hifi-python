"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PostAccountActivateOnRampRailBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    destination_chain: typing_extensions.Required[
        typing_extensions.Literal[
            "POLYGON_MAINNET", "ETHEREUM_MAINNET", "OPTIMISM_MAINNET", "BASE_MAINNET"
        ]
    ]
    destination_currency: typing_extensions.Required[
        typing_extensions.Literal["usdc", "usdt"]
    ]
    rail: typing_extensions.Required[typing_extensions.Literal["US_ACH_WIRE"]]


class _SerializerPostAccountActivateOnRampRailBody(pydantic.BaseModel):
    """
    Serializer for PostAccountActivateOnRampRailBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    destination_chain: typing_extensions.Literal[
        "POLYGON_MAINNET", "ETHEREUM_MAINNET", "OPTIMISM_MAINNET", "BASE_MAINNET"
    ] = pydantic.Field(alias="destinationChain")
    destination_currency: typing_extensions.Literal["usdc", "usdt"] = pydantic.Field(
        alias="destinationCurrency"
    )
    rail: typing_extensions.Literal["US_ACH_WIRE"] = pydantic.Field(alias="rail")
